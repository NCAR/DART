
&preprocess_nml
    input_obs_kind_mod_file = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90',
     input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90',
    output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90',
   input_files              = '../../../observations/forward_operators/obs_def_1d_state_mod.f90',
   /

&obs_sequence_tool_nml
   filename_seq = 'obs_seq.out',
   filename_out = 'obs_seq.processed', 
   first_obs_days = -1, 
   first_obs_seconds = -1, 
   last_obs_days = -1, 
   last_obs_seconds = -1, 
   obs_types = '', 
   keep_types = .false., 
   print_only = .false., 
   min_lat = -90.0, 
   max_lat =  90.0, 
   min_lon =   0.0, 
   max_lon = 360.0
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /

&utilities_nml
   TERMLEVEL = 1,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml'
   /

&assim_tools_nml
   /

&obs_kind_nml
   /

&location_nml
   /

# note that only one of name or list can be used, and the other
# must be set to '' to avoid ambiguity.
&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.
   /

# The low-order models do not technically use a calendar ...
# If you specify 'Gregorian' 1601 1 1 0 0 0 ... that will
# correspond to a DART time of 0 days, 0 seconds.
# The default will create one gigantic bin.

&schedule_nml
   calendar       = 'Gregorian',
   first_bin_start =  1601,  1,  1,  0,  0,  0,
   first_bin_end   =  2999,  1,  1,  0,  0,  0,
   last_bin_end    =  2999,  1,  1,  0,  0,  0,
   bin_interval_days    = 1000000,
   bin_interval_seconds = 0,
   max_num_bins         = 1000,
   print_table          = .true.
   /

&obs_loop_nml
   filename_in  = 'obs_seq.out'
   filename_out = 'obs_seq.loop' 
   print_only   = .false.
   calendar     = 'Gregorian'
   /

&obs_assim_count_nml
   obs_sequence_name = 'obs_seq.out'
   obs_sequence_list = '', 
   calendar = 'Gregorian'
   counts_only = .false.
   stats_by_obs_type = .false.
   print_metadata = .false.
   print_time_info = .true.
   output_file = ""
   /



