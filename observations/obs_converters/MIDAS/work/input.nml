&preprocess_nml
   overwrite_output        = .true.
   input_obs_qty_mod_file  = '../../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
   output_obs_qty_mod_file = '../../../../assimilation_code/modules/observations/obs_kind_mod.f90'
   input_obs_def_mod_file  = '../../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../../observations/forward_operators/obs_def_mod.f90'
   quantity_files          = '../../../../assimilation_code/modules/observations/atmosphere_quantities_mod.f90',
                             '../../../../assimilation_code/modules/observations/chemistry_quantities_mod.f90',
                             '../../../../assimilation_code/modules/observations/space_quantities_mod.f90'
   obs_type_files          = '../../../../observations/forward_operators/obs_def_upper_atm_mod.f90'
   /

&obs_kind_nml
   /

&location_nml
   /

&utilities_nml
   module_details = .false.,
   termlevel      = 2
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.  
   /

&MIDAS_to_obs_nml
   input_file    = '../data/Test.nc',
   obs_out_file  = 'obs_seq.out',
   verbose       = .TRUE.
   /

&obs_sequence_tool_nml
   filename_seq         = 'obs_seq_1.out', 'obs_seq_2.out',
   filename_out         = 'obs_seq.combined',
   filename_seq_list    = '',
   first_obs_days       = -1,
   first_obs_seconds    = -1,
   last_obs_days        = -1,
   last_obs_seconds     = -1 
   /

