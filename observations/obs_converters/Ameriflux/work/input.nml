&preprocess_nml
   overwrite_output        = .true.
   input_obs_qty_mod_file  = '../../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
   output_obs_qty_mod_file = '../../../../assimilation_code/modules/observations/obs_kind_mod.f90'
   input_obs_def_mod_file  = '../../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../../observations/forward_operators/obs_def_mod.f90'
   quantity_files          = '../../../../assimilation_code/modules/observations/land_quantities_mod.f90'
   obs_type_files          = '../../../../observations/forward_operators/obs_def_tower_mod.f90'
   /

&obs_kind_nml
   /

&location_nml
   /

&utilities_nml
   module_details = .FALSE.
   termlevel      = 2
   /

&obs_sequence_nml
   write_binary_obs_sequence = .FALSE.
   /

&level4_to_obs_nml
   text_input_file = '../data/USHa12003_L4_h.txt'
   obs_out_file    = 'obs_seq.out'
   year            = 2003
   timezoneoffset  = -6
   latitude        =  42.5378
   longitude       = -72.1715
   elevation       = 353
   flux_height     = 29
   maxgoodqc       = 3
   verbose         = .TRUE.
   /

# This is appropriate for a days worth of flux tower observations
# the obs in the file end 1 second before the time in the name.
# If you are using these obs with CLM, ending 1 second before is appropriate.
# 2003-07-23-00000 is DART 147030 00000
&obs_sequence_tool_nml
   filename_seq       = 'obs_seq.out'
   filename_seq_list  = ''
   filename_out       = 'obs_seq.2003-07-23-00000'
   print_only         = .false.
   gregorian_cal      = .true.
   first_obs_days     = 147030
   first_obs_seconds  = 0
   last_obs_days      = 147030
   last_obs_seconds   = 86399
   /

&schedule_nml
   calendar        = 'Gregorian'
   first_bin_start =  1601,  1,  1,  0,  0,  0
   first_bin_end   =  2999,  1,  1,  0,  0,  0
   last_bin_end    =  2999,  1,  1,  0,  0,  0
   bin_interval_days    = 1000000
   bin_interval_seconds = 0
   max_num_bins         = 1000
   print_table          = .true.
   /

&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.out'
   obs_sequence_list = ''
   append_to_netcdf  = .false.
   lonlim1    =    0.0
   lonlim2    =  360.0
   latlim1    =  -90.0
   latlim2    =   90.0
   verbose    = .false.
   /

