&probit_transform_nml
   /

&algorithm_info_nml
   qceff_table_filename = ''
   /

&perfect_model_obs_nml
   start_from_restart    = .true.,
   output_restart        = .true.,
   async                 = 2,
   init_time_days        = -1,
   init_time_seconds     = -1,
   first_obs_days        = -1,
   first_obs_seconds     = -1,
   last_obs_days         = -1,
   last_obs_seconds      = -1,
   output_interval       = 1,
   trace_execution       = .false.,
   restart_in_file_name  = "perfect_ics",
   restart_out_file_name = "perfect_restart",
   obs_seq_in_file_name  = "obs_seq.in",
   obs_seq_out_file_name = "obs_seq.perfect",
   adv_ens_command       = "../shell_scripts/advance_model.csh"
   output_timestamps     = .false.,
   trace_execution       = .false.,
   output_forward_op_errors = .false.,
   print_every_nth_obs   = -1,
   silence               = .false.,
  /


&filter_nml
   async                    = 4,
   adv_ens_command          = "../shell_scripts/advance_model.csh",
   ens_size                 =  20,
   start_from_restart       = .true.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.out",
   obs_sequence_out_name    = "obs_seq.final",
   restart_in_file_name     = "filter_ics",
   restart_out_file_name    = "filter_restart",
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 20,
   num_output_obs_members   = 20,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       =  1.0,
   outlier_threshold        =  3.0,
   output_forward_op_errors = .false.,
   output_timestamps        = .false.,
   output_inflation         = .true.,
   trace_execution          = .false.,
   silence                  = .false.,

   inf_flavor                  = 0,                       0,
   inf_initial_from_restart    = .false.,                 .false.,
   inf_sd_initial_from_restart = .false.,                 .false.,
   inf_output_restart          = .true.,                  .true.,
   inf_deterministic           = .true.,                  .true.,
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics',
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart',
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag',
   inf_initial                 = 1.0,                     1.0,
   inf_lower_bound             = 1.0,                     1.0,
   inf_upper_bound             = 1000000.0,               1000000.0,
   inf_damping                 = 1.0,                     1.0,
   inf_sd_initial              = 0.0,                     0.0,
   inf_sd_lower_bound          = 0.0,                     0.0,
   inf_sd_max_change           = 1.05,                    1.05,
  /




# cutoff of 0.03 (radians) is about 200km
&assim_tools_nml
   cutoff                          = 0.20,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = 0
  /


&ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2
  /


&cov_cutoff_nml
   select_localization = 1
  /


&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"
  /


&obs_sequence_nml
   write_binary_obs_sequence = .false.
  /


&preprocess_nml
    input_obs_kind_mod_file = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90',
     input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90',
    output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90',
   input_files              = '../../../observations/forward_operators/obs_def_reanalysis_bufr_mod.f90',
                              '../../../observations/forward_operators/obs_def_radar_mod.f90',
                              '../../../observations/forward_operators/obs_def_metar_mod.f90',
  /

   
&obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                'RADIOSONDE_U_WIND_COMPONENT',
                                'RADIOSONDE_V_WIND_COMPONENT',
                                'SAT_U_WIND_COMPONENT',
                                'SAT_V_WIND_COMPONENT',
   evaluate_these_obs_types   = 'RADIOSONDE_SPECIFIC_HUMIDITY',
  /


&model_nml
   ncommas_restart_filename     = 'ncommas_restart.nc'
   assimilation_period_days     = 1,
   assimilation_period_seconds  = 0,
   model_perturbation_amplitude = 0.2,
   calendar                     = 'Gregorian',
   debug                        = 0,
  /

# The list of variables to assimilate is contained in a separate file
# and namelist. The file is called "ncommas_vars.nml", the namelist is
# called "ncommas_vars_nml".

&ncommas_to_dart_nml
   ncommas_to_dart_output_file  = 'dart_ics'
  /


&dart_to_ncommas_nml
   dart_to_ncommas_input_file   = 'dart_restart',
   advance_time_present         = .false.
  /


&location_nml
   horiz_dist_only             = .true.,
   vert_normalization_pressure = 100000.0,
   vert_normalization_height   = 10000.0,
   vert_normalization_level    = 20.0,
   approximate_distance        = .false.,
   nlon                        = 71,
   nlat                        = 36,
   output_box_info             = .true.
  /


&utilities_nml
   TERMLEVEL = 1,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml'
  /


&mpi_utilities_nml
   reverse_task_layout = .true.,
  /


# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   first_bin_center =  1998, 1, 3, 0, 0, 0 ,
   last_bin_center  =  1998, 2, 1, 0, 0, 0 ,
   bin_separation   =     0, 0, 1, 0, 0, 0 ,
   bin_width        =     0, 0, 1, 0, 0, 0 ,
   time_to_skip     =     0, 0, 0, 0, 0, 0 ,
   max_num_bins     = 1000,
   trusted_obs      = 'null',
   Nregions   = 4,
   lonlim1    = 30.0,  130.0, 290.0, 290,
   lonlim2    = 130.0, 270.0, 380.0, 380,
   latlim1    = -50.0, -50.0, -50.0,  20,
   latlim2    =  20.0,  50.0,  50.0,  50,
   reg_names  = 'Indian Ocean', 'Pacific', 'Atlantic', 'North Atlantic',
   print_mismatched_locs = .false.,
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   use_zero_error_obs    = .false.,
   verbose               = .true.,
   hlevel =  10.0,  20.0,   30.0,   40.0,  100.0,  
            200.0, 500.0, 1000.0, 2000.0, 
  /


&schedule_nml
   calendar        = 'Gregorian',
   first_bin_start =  1601,  1,  1,  0,  0,  0,
   first_bin_end   =  2999,  1,  1,  0,  0,  0,
   last_bin_end    =  2999,  1,  1,  0,  0,  0,
   bin_interval_days    = 1000000,
   bin_interval_seconds = 0,
   max_num_bins         = 1000,
   print_table          = .true.
  /


&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.
  /

