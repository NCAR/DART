&probit_transform_nml
   /

&algorithm_info_nml
   qceff_table_filename = ''
   /

&perfect_model_obs_nml
   start_from_restart    = .true.,
   output_restart        = .true.,
   async                 = 2,
   init_time_days        = 139338,
   init_time_seconds     = 0,
   first_obs_days        = -1,
   first_obs_seconds     = -1,
   last_obs_days         = -1,
   last_obs_seconds      = -1,
   output_interval       = 1,
   restart_in_file_name  = "perfect_ic_old",
   restart_out_file_name = "perfect_ic_new"
   obs_seq_in_file_name  = "obs_seq.in",
   obs_seq_out_file_name = "obs_seq.out",
   adv_ens_command       = "./advance_model.csh",
   output_timestamps     = .false.,
   trace_execution       = .false.,
   output_forward_op_errors = .false.,
   print_every_nth_obs   = -1,
   silence               = .false.,
   /

&filter_nml
   async                    = 2,
   adv_ens_command          = "./advance_model.csh",
   ens_size                 = 10, 
   start_from_restart       = .true.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.out",
   obs_sequence_out_name    = "obs_seq.final",
   restart_in_file_name     = "filter_ics",
   restart_out_file_name    = "filter_ic_new", 
   init_time_days           = 139338,
   init_time_seconds        = 0,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 0,
   num_output_obs_members   = 0,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       = 3.0,
   outlier_threshold        = 3.0,
   output_forward_op_errors = .false.,
   output_inflation         = .true.,
   trace_execution          = .false.,
   output_timestamps        = .false.,
   silence                  = .false.,

   inf_flavor               = 0,                      0,
   inf_start_from_restart   = .false.,                .false.,
   inf_output_restart       = .true.,                 .true.,
   inf_deterministic        = .true.,                 .true.,
   inf_in_file_name         = 'prior_inf_ic_old',     'post_inf_ic_old',
   inf_out_file_name        = 'prior_inf_ic_new',     'post_inf_ic_new',
   inf_diag_file_name       = 'prior_inf_diag',       'post_inf_diag',
   inf_initial              = 1.0,                     1.0,
   inf_lower_bound          = 1.0,                     1.0,
   inf_upper_bound          = 1000000.0,               1000000.0,
   inf_damping              = 1.0,                     1.0,
   inf_sd_initial           = 0.1,                     0.1,
   inf_sd_lower_bound       = 0.0,                     0.0
   inf_sd_max_change        = 1.05,                    1.05
   /


&ensemble_manager_nml
   single_restart_file_in = .false.,
   single_restart_file_out = .false.
   /

&assim_tools_nml
   cutoff                          = 0.2,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = 0
   /

&cov_cutoff_nml
   select_localization = 1
   /

&reg_factor_nml
   select_regression = 1,
   input_reg_file = "time_mean_reg" 
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = 'reg_diagnostics'
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /

&model_nml
   model_config_file  = 'fv_rst.res.nc', 
   model_restart_file = 'fv_rst.res.nc',
   tracer_names = 'liq_wat', 
                  'ice_wat',
                  'cld_amt', 
   tracer_files = 'atmos_tracers.res.nc', 
                  'atmos_tracers.res.nc', 
                  'atmos_tracers.res.nc',
   tracer_config_files = 'atmos_tracers.res.nc', 
                  	 'atmos_tracers.res.nc', 
                  	 'atmos_tracers.res.nc',
   tracer_obs_kind_names = 
                  'CLOUD_LIQUID_WATER', 
                  'CLOUD_ICE', 
                  'CLOUD_FRACTION'
   highest_obs_pressure_mb   = 100.0,
   highest_state_pressure_mb = 150.0,
   max_obs_lat_degree        = 85.0,
   Time_step_seconds         = 21600,
   Time_step_days            = 0
   /

&am2_to_dart_nml
   restart_file            = 'fv_rst.res.nc',
   tracer_file             = 'atmos_tracers.res.nc',
   am2_to_dart_output_file = 'dart_ics'
   /

&dart_to_am2_nml
   dart_to_am2_input_file  = 'dart_restart',
   restart_file            = 'fv_rst.res.nc',
   tracer_file             = 'atmos_tracers.res.nc',
   advance_time_present    = .false.
   /

&location_nml
   horiz_dist_only = .false.,
   vert_normalization_pressure = 100000.0, 
   vert_normalization_height = 10000.0,
   vert_normalization_level = 20.0,
   approximate_distance = .true.,
   nlon = 71, 
   nlat = 36
   /

&preprocess_nml
           overwrite_output = .true.,
    input_obs_kind_mod_file = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90',
     input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90',
    output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90',
   input_files              = '../../../observations/forward_operators/obs_def_reanalysis_bufr_mod.f90',
                              '../../../observations/forward_operators/obs_def_gps_mod.f90',
                              '../../../observations/forward_operators/obs_def_QuikSCAT_mod.f90',
                              '../../../observations/forward_operators/obs_def_AIRS_mod.f90',
                              '../../../observations/forward_operators/obs_def_cloud_mod.f90'
   /

&obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                'ACARS_TEMPERATURE',
                                'AIRCRAFT_TEMPERATURE',
                                'RADIOSONDE_U_WIND_COMPONENT',
                                'RADIOSONDE_V_WIND_COMPONENT',
                                'AIRCRAFT_U_WIND_COMPONENT',
                                'AIRCRAFT_V_WIND_COMPONENT',
                                'ACARS_U_WIND_COMPONENT',
                                'ACARS_V_WIND_COMPONENT',
                                'SAT_U_WIND_COMPONENT',
                                'SAT_V_WIND_COMPONENT',
                                'CLOUD_LIQUID_WATER', 
                                'CLOUD_ICE', 
                                'CLOUD_FRACTION'
   /

!   evaluate_these_obs_types = 'RADIOSONDE_SURFACE_PRESSURE' /

&utilities_nml
   TERMLEVEL = 1,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml',
   write_nml   = 'file'
   /

&mpi_utilities_nml
   /

&obs_def_gps_nml
  max_gpsro_obs = 100000,
   / 

&obs_sequence_tool_nml
   filename_seq      = 'obs_seq.test',
   filename_out      = 'obs_seq.processed',
   first_obs_days    = -1,
   first_obs_seconds = -1,
   last_obs_days     = -1,
   last_obs_seconds  = -1,
   print_only        = .false.,
   min_lat           = -90.0,
   max_lat           =  90.0,
   min_lon           =   0.0,
   max_lon           = 360.0,
   gregorian_cal     = .true.
   /

# other possible obs tool namelist items:
#
# keep only the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT',
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .true.,
#
# remove the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT',
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .false.,
#
# keep only observations with a DART QC of 0:
#   qc_metadata        = 'Dart quality control',
#   min_qc             = 0,
#   max_qc             = 0,
#
# keep only radiosonde temp obs between 250 and 300 K:
#   copy_metadata      = 'NCEP BUFR observation',
#   copy_type          = 'RADIOSONDE_TEMPERATURE',
#   min_copy           = 250.0,
#   max_copy           = 300.0,
#


# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   first_bin_center =  2003, 1, 1, 6, 0, 0 ,
   last_bin_center  =  2003, 1, 2, 0, 0, 0 ,
   bin_separation   =     0, 0, 0, 6, 0, 0 ,
   bin_width        =     0, 0, 0, 6, 0, 0 ,
   time_to_skip     =     0, 0, 1, 0, 0, 0 ,
   max_num_bins     = 1000,
   trusted_obs      = 'null',
   Nregions   = 4,
   lonlim1    =   0.0,   0.0,   0.0, 235.0,
   lonlim2    = 360.0, 360.0, 360.0, 295.0,
   latlim1    =  20.0, -80.0, -20.0,  25.0,
   latlim2    =  80.0, -20.0,  20.0,  55.0,
   reg_names  = 'Northern Hemisphere', 'Southern Hemisphere', 'Tropics', 'North America',
   print_mismatched_locs = .false.,
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   use_zero_error_obs    = .false.,
   verbose               = .false.
   /


