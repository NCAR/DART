
# Each variable must have 5 entries.
# 1: variable name
# 2: DART QUANTITY
# 3: minimum value - as a character string - if none, use 'NA'
# 4: maximum value - as a character string - if none, use 'NA'
# 5: does the variable get updated in the restart file or not ...
#    only variables from restart files may be updated.
#    'UPDATE' =>        update the variable in the restart file
#    'NO_COPY_BACK' => do not update the variable in the restart file
#    all these variables will be updated INTERNALLY IN DART
#    only variables marked 'UPDATE' will be modified for ROMS.
# 'roms_input.nc' is a restart | 'roms_hist.nc' is a history file
# obs within +/- 0.5*assimilation_period_days will be assimilated
&model_nml
   roms_filename               = 'roms_hist_z.nc' 
   assimilation_period_days    = 8
   assimilation_period_seconds = 0
   perturbation_amplitude      = 0.02
   debug                       = 0
   variables                   = 'temp', 'QTY_TEMPERATURE'        , 'NA' , 'NA', 'update'
                                 'salt', 'QTY_SALINITY'           , '0.0', 'NA', 'update'
                                 'u'   , 'QTY_U_CURRENT_COMPONENT', 'NA' , 'NA', 'update'
                                 'v'   , 'QTY_V_CURRENT_COMPONENT', 'NA' , 'NA', 'update'
                                 'zeta', 'QTY_SEA_SURFACE_HEIGHT' , 'NA' , 'NA', 'update'
  /

&filter_nml
   async                    = 0
   adv_ens_command          = 'DART_trying_to_advance_ROMS_not_supported'
   ens_size                 = 3
   obs_sequence_in_name     = '../obs_seqs/wod_T2.out'
   obs_sequence_out_name    = 'obs_seq.final'
   init_time_days           = -1
   init_time_seconds        = -1
   first_obs_days           = -1
   first_obs_seconds        = -1
   last_obs_days            = -1
   last_obs_seconds         = -1
   obs_window_days          = 2
   obs_window_seconds       = 0
   num_output_obs_members   = 3
   output_interval          = 1
   num_groups               = 1
   distributed_state        = .true.
   compute_posterior        = .true.
   output_forward_op_errors = .false.
   output_timestamps        = .false.
   trace_execution          = .true.
   silence                  = .false.

   input_state_file_list    = 'in_ens.txt'
   output_state_file_list   = 'out_ens.txt'
   stages_to_write          = 'preassim', 'output'
   output_members           = .true.
   output_mean              = .true.
   output_sd                = .true.
   write_all_stages_at_end  = .false.
   num_output_state_members = 3

   inf_flavor                  = 5,                       0
   inf_initial_from_restart    = .true.,                 .false.
   inf_sd_initial_from_restart = .true.,                 .false.
   inf_initial                 = 1.0,                     1.0
   inf_lower_bound             = 0.0,                     1.0
   inf_upper_bound             = 1000.0,                  1000.0
   inf_damping                 = 0.9,                     0.9
   inf_sd_initial              = 0.6,                     0.6
   inf_sd_lower_bound          = 0.6,                     0.6
   inf_sd_max_change           = 1.05,                    1.05
  /

# ---------------------
# Note on Localization:
# ---------------------
# cutoff is the localization half-width parameter
# or where the influence of the obs dcreases to half
# The unit for cutoff is radians
#
# Example: For an effective localization radius
# ++++++++ of 300 km. Set the cutoff to 0.0236
#          such that loc: 0.0236*2*6371~300km 
#          The factor 2 is to accoutn for the 
#          entire distance (not only half-width)
#          6371km is the radius of the Earth
# 
# Localization can be different for different 
# observations. You can add a special localization 
# for specific observations below. For example:  
# 
# special_localization_obs_types = 'SATELLITE_SSH', 'CTD_SALINITY', 'ARGO_TEMPERATURE'
# special_localization_cutoffs   =            0.01,           0.02,               0.03 
# Similar special treatment need to be applied in the vertical
&assim_tools_nml
   cutoff                          = 0.0236
   sort_obs_inc                    = .false.
   spread_restoration              = .false.
   sampling_error_correction       = .false.
   adaptive_localization_threshold = -1
   output_localization_diagnostics = .false.
   localization_diagnostics_file   = 'localization_diagnostics'
   print_every_nth_obs             = 1000
   distribute_mean                 = .true.
  /

&quality_control_nml
   input_qc_threshold          = 3.0
   enable_special_outlier_code = .false.
   outlier_threshold           = 3.0
  /

&state_vector_io_nml
   buffer_state_io = .false.
   single_precision_output = .false.
  /

&ensemble_manager_nml
  /

&probit_transform_nml
   /

&algorithm_info_nml
   qceff_table_filename = ''
   /

&quad_interpolate_nml
   /

&perfect_model_obs_nml
   read_input_state_from_file = .true.
   single_file_in             = .false.
   input_state_files          = 'roms_input.nc'
   init_time_days             = -1
   init_time_seconds          = -1

   write_output_state_to_file = .false.
   single_file_out            = .false.
   output_state_files         = 'roms_output.nc'
   output_interval            = 1

   async                      = 0
   adv_ens_command            = "DART_trying_to_advance_ROMS_not_supported"

   obs_seq_in_file_name       = "obs_seq.in"
   obs_seq_out_file_name      = "obs_seq.out"
   first_obs_days             = -1
   first_obs_seconds          = -1
   last_obs_days              = -1
   last_obs_seconds           = -1

   trace_execution            = .false.
   output_timestamps          = .false.
   print_every_nth_obs        = -1
   output_forward_op_errors   = .false.
   silence                    = .false.
  /

&cov_cutoff_nml
   select_localization = 1
  /

&reg_factor_nml
   select_regression    = 1
   input_reg_file       = 'time_mean_reg'
   save_reg_diagnostics = .false.
   reg_diagnostics_file = 'reg_diagnostics'
  /

&fill_inflation_restart_nml
   write_prior_inf   = .true.
   prior_inf_mean    = 1.0
   prior_inf_sd      = 0.6
 
   write_post_inf    = .false.
   post_inf_mean     = 1.00
   post_inf_sd       = 0.6

   input_state_files = 'roms_hist_z.nc'
   single_file       = .false.
   verbose           = .true.
  /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
  /

&obs_kind_nml
   evaluate_these_obs_types   = ''
   assimilate_these_obs_types = 'SATELLITE_SSH',
                                'SATELLITE_SSS',
                                'XBT_TEMPERATURE',
                                'CTD_TEMPERATURE',
                                'FLOAT_TEMPERATURE', 
                                'MOORING_TEMPERATURE',
                                'APB_TEMPERATURE',
                                'BOTTLE_TEMPERATURE',
                                'CTD_SALINITY',
                                'ARGO_TEMPERATURE',
                                'ARGO_SALINITY',
                                'GLIDER_TEMPERATURE',
                                'GLIDER_SALINITY',
                                'SATELLITE_BLENDED_SST',
                                'SATELLITE_MICROWAVE_SST',
                                'SATELLITE_INFRARED_SST'
  /

&location_nml
   horiz_dist_only = .false.
  /

&utilities_nml
   TERMLEVEL       = 1
   module_details  = .false.
   logfilename     = 'dart_log.out'
   nmlfilename     = 'dart_log.nml'
   write_nml       = 'file'
  /

&preprocess_nml
   input_obs_def_mod_file  = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90'
   input_obs_qty_mod_file  = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
   output_obs_qty_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90'
   obs_type_files          = '../../../observations/forward_operators/obs_def_ocean_mod.f90'
   quantity_files          = '../../../assimilation_code/modules/observations/ocean_quantities_mod.f90'
  /

&forward_operator_nml
  /

&obs_sequence_tool_nml
   num_input_files   = 1
   filename_seq      = 'obs_seqs/obs_seq.0Z.20140718'
   filename_out      = 'obs_seqs/wod_T2.out'
   first_obs_days    = -1
   first_obs_seconds = -1
   last_obs_days     = -1
   last_obs_seconds  = -1
   print_only        = .false.
   obs_types         = 'FLOAT_TEMPERATURE', 'MOORING_TEMPERATURE', 'CTD_TEMPERATURE',  
                       'XBT_TEMPERATURE', 'GLIDER_TEMPERATURE', 'BOTTLE_TEMPERATURE', 
                       'APB_TEMPERATURE' 
   min_lat           = -15.0
   max_lat           =  15.0
   min_lon           =  90.0
   max_lon           = 145.0
   gregorian_cal     = .true.
  /


# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]
# hlevel_edges should be changed to more realistic values for ROMS

&obs_diag_nml
   obs_sequence_name     = ''
   obs_sequence_list     = 'obs_seq_files.txt'
   first_bin_center      =  2013, 1,  1, 0, 0, 0
   last_bin_center       =  2013, 1, 31, 0, 0, 0
   bin_separation        =     0, 0,  2, 0, 0, 0
   bin_width             =     0, 0,  2, 0, 0, 0
   time_to_skip          =     0, 0,  0, 0, 0, 0
   max_num_bins          = 1000
   trusted_obs           = 'null'
   Nregions              = 1
   lonlim1               =   0.0
   lonlim2               = 360.0
   latlim1               = -90.0
   latlim2               =  90.0
   reg_names             = 'CAWO'
   hlevel_edges          = -5000.0, -2000.0, -1000.0, -500.0, -200.0, -100.0, -50.0, -20.0, -10.0, 1.0
   print_mismatched_locs = .false.
   create_rank_histogram = .true.
   outliers_in_histogram = .true.
   use_zero_error_obs    = .false.
   verbose               = .true.
  /

&schedule_nml
   calendar             = 'Gregorian'
   first_bin_start      =  1601,  1,  1,  0,  0,  0
   first_bin_end        =  2999,  1,  1,  0,  0,  0
   last_bin_end         =  2999,  1,  1,  0,  0,  0
   bin_interval_days    = 1000000
   bin_interval_seconds = 0
   max_num_bins         = 1000
   print_table          = .true.
  /

&obs_seq_to_netcdf_nml
   obs_sequence_name = ''
   obs_sequence_list = 'obs_seq_files.txt'
   append_to_netcdf  = .false.
   lonlim1           =   0.0
   lonlim2           = 360.0
   latlim1           = -90.0
   latlim2           =  90.0
   verbose           = .true.
  /

&model_mod_check_nml
   input_state_files     = 'roms_hist_z.nc'
   output_state_files    = 'mmc_output.nc'
   test1thru             = 0 
   run_tests             = 1, 3, 4, 7
   x_ind                 = 160920480
   loc_of_interest       = 100.0, -10.0, 2500.0
   quantity_of_interest  = 'QTY_TEMPERATURE'
   interp_test_dlon      = 0.1 
   interp_test_dlat      = 0.1 
   interp_test_dvert     = 1.0 
   interp_test_lonrange  = 105.0,  110.0
   interp_test_latrange  =   5.0,   10.0
   interp_test_vertrange =   0.0,   50.0
   interp_test_vertcoord = 'VERTISHEIGHT'
   verbose               = .true.
  /
