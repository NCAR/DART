&perfect_model_obs_nml
   start_from_restart    = .true.,
   output_restart        = .true.,
   async                 = 2,
   init_time_days        = -1,
   init_time_seconds     = -1,
   first_obs_days        = -1,
   first_obs_seconds     = -1,
   last_obs_days         = -1,
   last_obs_seconds      = -1,
   output_interval       = 1,
   restart_in_file_name  = "perfect_ics",
   restart_out_file_name = "perfect_restart",
   obs_seq_in_file_name  = "obs_seq.in",
   obs_seq_out_file_name = "obs_seq.out",
   adv_ens_command       = "./advance_globalmodel.csh"  /

&filter_nml
   async                    = 2,
   adv_ens_command          = "./advance_globalmodel.csh",
   ens_size                 = 20,
   start_from_restart       = .true.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.NWP_01_02",
   obs_sequence_out_name    = "obs_seq.final",
   restart_in_file_name     = "filter_ics",
   restart_out_file_name    = "filter_ics_new",
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 20,
   num_output_obs_members   = 0,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       =  4.0,
   outlier_threshold        =  3.0,
   output_forward_op_errors = .false.,
   output_timestamps        = .true.,
   output_inflation         = .true.,

   inf_flavor               = 2,                       0,
   inf_start_from_restart   = .false.,                 .false.,
   inf_output_restart       = .true.,                  .true.,
   inf_deterministic        = .true.,                  .true.,
   inf_in_file_name         = 'prior_inf_ics_old',         'post_inf_ics',
   inf_out_file_name        = 'prior_inf_ics_new',     'post_inf_restart',
   inf_diag_file_name       = 'prior_inf_diag',        'post_inf_diag',
   inf_initial              = 1.00,                    1.00,
   inf_sd_initial           = 0.1,                     0.0,
   inf_lower_bound          = 1.0,                     1.0,
   inf_upper_bound          = 1000.0,               1000000.0,
   inf_sd_lower_bound       = 0.1,                     0.0
/
! ! inf_flavor is 0:none, 1:obs space, 2: varying state space, 3: fixed state_space

&smoother_nml
   num_lags              = 0,
   start_from_restart    = .false.,
   output_restart        = .false.,
   restart_in_file_name  = 'smoother_ics',
   restart_out_file_name = 'smoother_restart'  /

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.2,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 10000  /

&cov_cutoff_nml
   select_localization = 1  /

&obs_sequence_nml
   write_binary_obs_sequence = .true.  /

&preprocess_nml
   overwrite_output        = .true.
   input_obs_qty_mod_file  = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
   output_obs_qty_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90'
   input_obs_def_mod_file  = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90'
   quantity_files          = '../../../assimilation_code/modules/observations/atmosphere_quantities_mod.f90'
   obs_type_files          = '../../../observations/forward_operators/obs_def_reanalysis_bufr_mod.f90',
                             '../../../observations/forward_operators/obs_def_radar_mod.f90',
                             '../../../observations/forward_operators/obs_def_metar_mod.f90',
                             '../../../observations/forward_operators/obs_def_dew_point_mod.f90',
                             '../../../observations/forward_operators/obs_def_altimeter_mod.f90',
                             '../../../observations/forward_operators/obs_def_gps_mod.f90',
                             '../../../observations/forward_operators/obs_def_vortex_mod.f90'
   /

&obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                'ACARS_TEMPERATURE',
                                'AIRCRAFT_TEMPERATURE',
                                'RADIOSONDE_U_WIND_COMPONENT',
                                'RADIOSONDE_V_WIND_COMPONENT',
                                'AIRCRAFT_U_WIND_COMPONENT',
                                'AIRCRAFT_V_WIND_COMPONENT',
                                'ACARS_U_WIND_COMPONENT',
                                'ACARS_V_WIND_COMPONENT',
                                'SAT_U_WIND_COMPONENT',
                                'SAT_V_WIND_COMPONENT'/

#     evaluate_these_obs_types = 'RADIOSONDE_V_WIND_COMPONENT'  /

# Notes for obs_def_radar_mod_nml:
# (1) Reflectivity limit can be applied to observations and/or state (forward operator).
# (2) Default lowest_reflectivity values DART will use (if apply_reflectivity_limit = .true.)
#     is missing_r8. If you want to use the default, delete the line of respective
#     lowest_reflectivity.
# (3) As it is not clear how to assimilate Z (for now), "convert_to_dbz" is reset to .true.
#     even if you set it to .false. here in the namelist.

&obs_def_radar_mod_nml
   convert_to_dbz            =  .true. ,
   dbz_threshold             =   0.001 ,
   apply_ref_limit_to_obs    = .false. ,
   reflectivity_limit_obs    =     0.0 ,
   lowest_reflectivity_obs   =     0.0 ,
   apply_ref_limit_to_state  = .false. ,
   reflectivity_limit_state  =     0.0 ,
   lowest_reflectivity_state =     0.0 /

&obs_def_gps_nml
   max_gpsro_obs = 100000 /

&assim_model_nml
   write_binary_restart_files = .true.  /

# Notes for model_nml:
# (1) vert_localization_coord must be one of:
#     1 = model level
#     2 = pressure
#     3 = height

&model_nml
   output_state_vector = .false.,
   num_moist_vars      = 3,
   num_domains         = 1,
   calendar_type       = 3,
   surf_obs            = .true.,
   soil_data           = .true.,
   h_diab              = .false.,
   assimilation_period_seconds = 21600,
   adv_mod_command             = './wrf.exe',
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10 /

# For Global WRF, these are also in model_nml
#   periodic_x = .true.,
#   polar = .true.

&location_nml
   horiz_dist_only             = .false.,
   vert_normalization_pressure = 100000.0,
   vert_normalization_height   = 10000.0,
   vert_normalization_level    = 20.0,
   approximate_distance        = .true.,
   nlon                        = 141,
   nlat                        = 72 /
!   output_box_info             = .false.  /

&utilities_nml
   TERMLEVEL = 2,
   logfilename = 'dart_log.out'  /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"  /

&ensemble_manager_nml
   single_restart_file_in  = .true.,
   single_restart_file_out = .true.,
   perturbation_amplitude  = 0.0005  /

&merge_obs_seq_nml
   num_input_files = 4,
   filename_seq    = 'obs_seq2003010112', 'obs_seq2003010124',  'obs_seq2003010212', 'obs_seq2003010224'
   filename_out    = 'obs_seq.NWP_01_02'   /

# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, 360]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final',
   first_bin_center =  2003, 1, 1, 0, 0, 0 ,
   last_bin_center  =  2003, 1, 2, 0, 0, 0 ,
   bin_separation   =     0, 0, 0,12, 0, 0 ,
   bin_width        =     0, 0, 0, 6, 0, 0 ,
   time_to_skip     =     0, 0, 0, 0, 0, 0 ,
   max_num_bins     = 1000,
   trusted_obs      = 'null',
   plevel       = 500,
   hlevel       = 5000,
   mlevel       = 5,
   Nregions   = 1,
   lonlim1    =   0.0,   0.0,   0.0, 235.0,
   lonlim2    = 360.0, 360.0, 360.0, 295.0,
   latlim1    =  20.0, -80.0, -20.0,  25.0,
   latlim2    =  80.0, -20.0,  20.0,  55.0,
   reg_names  = 'Northern Hemisphere', 'Southern Hemisphere', 'Tropics', 'North America',
   print_mismatched_locs = .false.,
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   use_zero_error_obs    = .false.,
   verbose               = .false.
   /

&restart_file_utility_nml 
   input_file_name              = "filter_ics.Jan11",        
   output_file_name             = "filter_ics.20021231120000",
   ens_size                     = 20,
   single_restart_file_in       = .true.,
   single_restart_file_out      = .true.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .true.,
   new_data_days                = 146826,  
   new_data_secs                = 43200,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1, 
   new_advance_secs             = -1
/


