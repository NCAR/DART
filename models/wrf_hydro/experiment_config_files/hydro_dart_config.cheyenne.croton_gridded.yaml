# Example HydroDart Experiment Config file.
#
# Purpose: collect ALL relevant information to a HydroDart experiment.
#
# There are top-level keys for differen phases of the experiment setup
# and run.
# Build Phase: dart and wrf_hydro.
# Experiment setup phase: experiment.
# Ensemble construction phase: ensemble.
# Run Phase: run.


modules: ## !!!  NOT currently in use: make sure your modules match
         ##      your mkmf_template and your compiler choices below.
  # TODO (JLM): The compiler specs for wrf-hydro and dart could be solved from the
  # modules at some later date. 

  
dart:
  use_existing_build: True
  # Absolute path required
  dart_src: ~/WRF_Hydro/wrf_hydro_dart
  fork: ## !!! NOT currently in use
  commit: ## !!! NOT currently in use
  mkmf_template: mkmf.template.gfortran #_5.4.0_docker
  mpi: True
  build_dir: dart_build
  observations:
    converters: USGS


wrf_hydro:
  use_existing_build: True
  # Absolute path required:
  wrf_hydro_src: ~/WRF_Hydro/wrf_hydro_nwm_public
  fork:   ## !!! NOT currently in use
  commit: ## !!! NOT currently in use
  model_config: Gridded
  compiler: gfort
  build_dir: wrf_hydro_build
  # Absolute path required: 
  domain_src: /glade/work/jamesmcc/domains/public/croton_NY
  domain_version: v1.2.1


experiment:
  tag: croton_gridded
  # Location where the experiment is established (small storage, not scratched)
  # Absolute path required
  experiment_dir: /glade/work/${USER}/dart/experiments/croton_gridded
  experiment_dir_mode: 'w'   ## !!! May NOT be in use
  # Location of where filter and the ensemble are run. (large storage, potentially scratched)
  # Absolute path required
  run_dir: /glade/scratch/${USER}/dart/runs/croton_test
  run_dir_mode: 'w'  ## !!! May NOT be in use
  # TODO(JLM): The initial ensemble size controls the number of members?? or not?
  # TODO(JLM): what are the format requirements here?
  # Absolute path required


# ensemble_construction
ensemble:
  # Should the size be taken from the initial_ens or is this allowed
  # as a double check?
  size: 4
  # A python script which constructs the ensemble from a single member
  # specified in the wrf_hydro options.
  constructor: ens_setup_files/ens_setup_croton_gridded.py


# How is the initial ensemble created?  
initial_ens:
  path: /glade/work/${USER}/dart/initial_ens/croton_gridded
  param_restart_file:  ## !! Currently depends on from_filter to run TODO(JLM)
    create: False
    # If mode 'r' will create if does not exist. If mode 'w' will overwrite.
    mode: 'r'   ## !!! May NOT be in use
    out_file: /glade/work/${USER}/dart/initial_ens/croton_gridded/parameters_init.nc
    # The following default to the restart files provided in the domain.
    hydro_rst: 
    restart:
    existing_variables: [qlink1,  qlink1]
    new_variables: [qBucketMult,  qSfcLatRunoffMult]
    values: [1, 5]
  from_filter:
    # Optionally create the inital ensemble from filter perturbation + advance.
    # This will use the same ensemble constructed by set
    create: True
    mode: 'r'   ## !!! May NOT be in use
    input_nml:
      filter_nml:
        input_state_file_list:
          # Here, only specify the /path/to/restart file for each. The list file is
          # handled internally.
          restart_file_list.txt:
          # If blank: the restarts in the wrf_hydro config/domain are used.
          hydro_file_list.txt:
          # For now, must match param_restart_file: out_file. TODO(JLM)
          param_file_list.txt: 
          # The output files are in path/member_iii/.
          # output_state_file_list: 'hydro_file_list.txt','param_file_list.txt'
          # perturb_from_single_instance: <forcibly true>
          # num_output_state_members: <should be the ensemble size>
      model_nml:
        model_perturbation_amplitude: 0.6
        perturb_distribution: 'lognormal'
  advance:
    end_time:
      

# The fields under the top level must be listed in dart:observations: above.
observation_preparation:
  all_obs_dir: /glade/work/jamesmcc/dart/obs_seq/croton_gridded
  USGS:
    prepare: False
    output: /glade/work/jamesmcc/dart/obs_seq/croton_gridded
    input: 
    window_size_hours:
    input_nml_patches:
      input_nml: 
        gages_list_file:
        input_file:
        #location_file: <should be solved internally>
        verbose:
        obs_fraction_for_error:

          
##################################
    
run_experiment: 
  
  time:
    end_time: 2013-06-01_03:00 ## Format: %Y-%m%d_%H:%M
    advance_model_hours: 1  ## TODO (JLM): check for next ob when actually setting this.
    assim_window:
      use_input_nml: False
      assim_window_size_hours: 1
    submit_all_jobs: False  ## not currently used.
    
  wrf_hydro_ens_advance:
    nproc: 2
    nnodes: 1
    account: 'NRALxxxx'
    walltime: '00:01'
    job_name: '6mile_ens_adv'
    queue: 'regular'
    email_when: "abe"
    email_who: ${USER}@ucar.edu
    
  perturb_forcing:
    perturb: True
    # Absolute path required
    noise_function_files: [/glade/u/home/jamesmcc/WRF_Hydro/wrf_hydro_dart/models/wrf_hydro/python/perturb_channel_only_forcing.py,
    /glade/u/home/jamesmcc/WRF_Hydro/wrf_hydro_dart/models/wrf_hydro/python/noise_qBucket_additive.py,
    /glade/u/home/jamesmcc/WRF_Hydro/wrf_hydro_dart/models/wrf_hydro/python/noise_qSfcLatRunoff_additive.py]
    noise_cmd: '/glade/u/home/jamesmcc/anaconda3/bin/python perturb_channel_only_forcing.py --perturb_forcing_dir FORCING_perturbed --qsfclat_perturb_func noise_qSfcLatRunoff_additive.py --qbucket_perturb_func noise_qBucket_additive.py'

  dart:
    exes: ['filter']
    scheduler: 
      nproc: 2
      nnodes: 1
      ppn_max: 36
      account: 'NRALxxxx'
      walltime: '00:01'
      job_name: '6mile_filter' #_{model_start_time_str}'
      queue: 'regular'
      email_when: "abe"
      email_who: ${USER}@ucar.edu    

    input_nml_patches:
      filter_nml:
        inf_flavor: 
