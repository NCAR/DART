
! For high-resolution models with large DART states, 
! use 'distributed_state = .true.'

&filter_nml
  async                       = 2
  adv_ens_command             = 'advance_model.csh'
  input_state_file_list       = 'input_filelist.txt'
  output_state_file_list      = 'output_filelist.txt'
  init_time_days              = -1
  init_time_seconds           = -1
  obs_sequence_in_name        = 'obs_seq.out'
  obs_sequence_out_name       = 'obs_seq.final'
  first_obs_days              = -1
  first_obs_seconds           = -1
  last_obs_days               = -1
  last_obs_seconds            = -1
  ens_size                    = 40 
  num_output_obs_members      = 40
  num_output_state_members    = 40
  output_interval             = 1
  output_members              = .true. 
  output_mean                 = .true.
  output_sd                   = .true.
  stages_to_write             = 'preassim', 'analysis', 'output'
  write_all_stages_at_end     = .true.
  distributed_state           = .true.
  compute_posterior           = .true.
  trace_execution             = .true.
  output_timestamps           = .true.
  num_groups                  = 1
  output_forward_op_errors    = .false.

  inf_flavor                  =  2,                 0,
  inf_initial_from_restart    = .true.,           .false.,
  inf_sd_initial_from_restart = .true.,           .false.,
  inf_deterministic           = .true.,            .true.,
  inf_initial                 = 1.0,               0.90,
  inf_lower_bound             = 1.0,               1.0
  inf_upper_bound             = 100.0,            100.0
  inf_damping                 = 0.9,               0.9
  inf_sd_initial              = 0.6,               0.6
  inf_sd_lower_bound          = 0.6,               0.6
  inf_sd_max_change           = 1.05,              1.05

/


! The model_nml namelist is currently made for a simulation run with the Morrison Microphysics scheme.   
! The hydrometeor fields will need to be updated if a different microphysics option is used
!
! Several surface observations can only be assimilated if you run the CM1 
! with a surace parameterization and set "output_sfcdiags = 1".  
! The following output variables include:
! 
! Model Output Variables -> Assimilated Observations
! 1.) t2    -> TEMPERATURE_2M
! 2.) u10   -> U_WIND_10
! 3.) v10   -> V_WIND_10
! 4.) q2    -> SPECIFIC_HUMIDITY_2M
! 5.) psfc  -> SURFACE_PRESSURE
! 
! RADIOSONDE_TEMPERATURE and RADIOSONDE_SPECIFIC_HUMIDITY observations require 
! air temperature and specific humidity as inputs. To do this you will have to 
! go into CM1 code and tell the model to output three-dimensional air temperature and
! specific humidity variables in "./src/writeout_nc.F" and "./src/restart.F"
!
! RADIOSONDE_DEWPOINT observations can be calculated by being passed 
! water vapor mixing ratio and air pressure fields, both of which are standard outputs of
! cm1.  In my experience, results improve when assimilating DEWPOINT temperature information
! rather than specific humidity information because the dynamic range is much narrower

&model_nml
  assimilation_period_days    = 0
  assimilation_period_seconds = 60
  calendar                    = 'Gregorian'
  cm1_template_file           = 'cm1out_rst_000001.nc'
  periodic_x                  = .false.
  periodic_y                  = .false. 
  debug                       = 0
  model_variables = 'ua'   , 'QTY_U_WIND_COMPONENT'        , 'NULL', 'NULL', 'UPDATE',
                    'va'   , 'QTY_V_WIND_COMPONENT'        , 'NULL', 'NULL', 'UPDATE',
                    'wa'   , 'QTY_VERTICAL_VELOCITY'       , 'NULL', 'NULL', 'UPDATE',
                    'theta', 'QTY_POTENTIAL_TEMPERATURE'   , 0.0000, 'NULL', 'UPDATE',
                    'prs'  , 'QTY_PRESSURE'                , 0.0000, 'NULL', 'UPDATE',
                    'qv'   , 'QTY_VAPOR_MIXING_RATIO'      , 0.0000, 'NULL', 'UPDATE',
                    'qc'   , 'QTY_CLOUD_LIQUID_WATER'      , 0.0000, 'NULL', 'UPDATE',
                    'qr'   , 'QTY_RAINWATER_MIXING_RATIO'  , 0.0000, 'NULL', 'UPDATE',
                    'qi'   , 'QTY_CLOUD_ICE'               , 0.0000, 'NULL', 'UPDATE',
                    'qs'   , 'QTY_SNOW_MIXING_RATIO'       , 0.0000, 'NULL', 'UPDATE',
                    'qg'   , 'QTY_GRAUPEL_MIXING_RATIO'    , 0.0000, 'NULL', 'UPDATE',
                   'ncr'   , 'QTY_RAIN_NUMBER_CONCENTR'    , 0.0000, 'NULL', 'UPDATE',
                   'nci'   , 'QTY_ICE_NUMBER_CONCENTRATION', 0.0000, 'NULL', 'UPDATE',
                   'ncs'   , 'QTY_SNOW_NUMBER_CONCENTR'    , 0.0000, 'NULL', 'UPDATE',
                   'ncg'   , 'QTY_GRAUPEL_NUMBER_CONCENTR' , 0.0000, 'NULL', 'UPDATE',
                   'rho'   , 'QTY_DENSITY'                 , 0.0000, 'NULL', 'UPDATE',
                   'dbz'   , 'QTY_RADAR_REFLECTIVITY'      , 0.0000, 'NULL', 'UPDATE',
  
                   ! Model variables that are output when you run with a simulation with 
                   ! a surface model and set "output_sfcdiags = 1"
                   !
                   !'u10'  , 'QTY_10M_U_WIND_COMPONENT'  , 'NULL', 'NULL', 'UPDATE',
                   !'v10'  , 'QTY_10M_V_WIND_COMPONENT'  , 'NULL', 'NULL', 'UPDATE',
                   !'t2'   , 'QTY_2M_TEMPERATURE'        , 0.0000, 'NULL', 'UPDATE',
                   !'q2'   , 'QTY_SPECIFIC_HUMIDITY'     , 0.0000, 'NULL', 'UPDATE',
                   !'th2'  , 'QTY_POTENTIAL_TEMPERATURE' , 0.0000, 'NULL', 'UPDATE',
                   !'tsk'  , 'QTY_SKIN_TEMPERATURE'      , 0.0000, 'NULL', 'UPDATE',
                   !'psfc' , 'QTY_SURFACE_PRESSURE'      , 0.0000, 'NULL', 'UPDATE',
               
                   ! Model variables that must be output by CM1 to assimilate RADIOSONDE TEMPERATURE
                   ! and RADIOSONDE_SPECIFIC_HUMIDITY observations
                   !
                   !'air_temp'  , 'QTY_TEMPERATURE'             , 'NULL', 'NULL', 'UPDATE',
                   !'spec_hum'  , 'QTY_SPECIFIC_HUMIDITY'       , 0.0000, 'NULL', 'UPDATE',
/

!
! This is a non-exhaustive list of variables that could be assimilated into CM1 forecasts
!
! Remember: TEMPERATURE_2M, U_WIND_10M, V_WIND_10M, SURFACE_PRESSURE, and SPECIFIC_HUMIDITY_2M 
!           require that CM1 is run with a surface model and outputs surface diagnostic variables
!
! If you are running CM1 simulations without a surface model you could theoretically assimilate a single
! RADIOSONDE observation that is near the surface to act as a "surface observation". DART will then ingest a 
! 3D model field rather than referring to the 2D surface model output.
!
! Also remember RADIOSONDE_TEMPERATURE and RADIOSONDE_SPECIFIC_HUMIDITY observations 
! requires CM1 to output three-dimensional arrays of air tempeature (i.e., air_temp) 
! and specific humidity (spec_hum)   
!

&obs_kind_nml
  assimilate_these_obs_types  = 'RADIOSONDE_U_WIND_COMPONENT', 
                                'RADIOSONDE_V_WIND_COMPONENT', 
                                'RADAR_REFLECTIVITY', 
                                'DOPPLER_RADIAL_VELOCITY',
  
  !  Observations that require CM1 to output 3D fields of air temperature and specific humidity
  !  This will require you to make minor modifications to the code
  !                             'RADIOSONDE_TEMPERATURE', 
  !                             'RADIOSONDE_SPECIFIC_HUMIDITY' 


  !  Observations that require water vapor mixing ratio and atmospheric pressure as inputs.  
  !  These are typically output by the CM1 model
                                'RADIOSONDE_DEWPOINT'

  !  Observations that require CM1 simulations to be run with a surface model                          
  !  Then set "output_sfcdiags = 1"
  !                             'TEMPERATURE_2M',
  !                             'U_WIND_10M',
  !                             'V_WIND_10M',
  !                             'SURFACE_PRESSURE',
  !                             'SPECIFIC_HUMIDITY_2M'
                   
  evaluate_these_obs_types   = ''
/

! This block is where you define the vertical localization radius for difference observations.
! Define the observation type in 'special_vert_normalization_obs_types' and define the vertical 
! radius in 'special_vert_normalization_heights'.
!
! The vertical localization radius is defined as '2 x special_vert_normalization_heights x special_localization_cutoffs'
! For example if... special_vert_normalization_heights = 50000 m (for RADIOSONDE)
!                   special_localization_cutoffs = 0.04 (for RADIOSONDE)
!        
!                   the horizontal localization radius will be 100000 m
!                   the vertical locaalization radius will be 4000 m
!
! If the observation type you are assimilating is not defined then CM1 will use vert_normalization_height to 
! define the vertical localization radius. i.e., vertical localization = 2 x cutoff x vert_normalization_height
!
! You should also define boundary condition information in this code block.  Do not change nx, ny, nor nz. 
! These are specific search radii used by DART, not the forecast domain size.

&location_nml
   x_is_periodic       = .false.
   y_is_periodic       = .false.
   z_is_periodic       = .false.
   min_x_for_periodic  = 0.0
   max_x_for_periodic  = 200000.0
   min_y_for_periodic  = 0.0
   max_y_for_periodic  = 200000.0
   min_z_for_periodic  = 0.0
   max_z_for_periodic  = 1.0
   compare_to_correct  = .false.
   output_box_info     = .false.
   print_box_level     = 0
   nx                  = 10
   ny                  = 10
   nz                  = 10
   vert_normalization_height = 1
   special_vert_normalization_obs_types = 'RADIOSONDE_U_WIND_COMPONENT','RADIOSONDE_V_WIND_COMPONENT', 'RADAR_REFLECTIVITY', 'DOPPLER_RADIAL_VELOCITY'
   special_vert_normalization_heights   = 0.04, 0.04, 0.33, 0.33
/


&perfect_model_obs_nml
  read_input_state_from_file = .true.
  input_state_files          = 'cm1out_rst_000001.nc'
  output_state_files         = 'perfect_output.nc'
  init_time_days             = -1
  init_time_seconds          = -1
  obs_seq_in_file_name       = 'obs_seq.in'
  obs_seq_out_file_name      = 'obs_seq.out'
  first_obs_days             = -1
  first_obs_seconds          = -1
  last_obs_days              = -1
  last_obs_seconds           = -1
  output_forward_op_errors   = .false.
  output_interval            = 1
  print_every_nth_obs        = -1
  output_timestamps          = .false.
  trace_execution            = .true.
  silence                    = .false.
/


&preprocess_nml
  overwrite_output         = .true.
  input_obs_qty_mod_file   = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
  output_obs_qty_mod_file  = '../../../assimilation_code/modules/observations/obs_kind_mod.f90'
  input_obs_def_mod_file   = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
  output_obs_def_mod_file  = '../../../observations/forward_operators/obs_def_mod.f90'
  obs_type_files           = '../../../observations/forward_operators/obs_def_reanalysis_bufr_mod.f90',
                             '../../../observations/forward_operators/obs_def_surface_mod.f90',
                            '../../../observations/forward_operators/obs_def_radar_mod.f90',
                            '../../../observations/forward_operators/obs_def_dew_point_mod.f90',
                            '../../../observations/forward_operators/obs_def_rel_humidity_mod.f90', 
 quantity_files           = '../../../assimilation_code/modules/observations/atmosphere_quantities_mod.f90'
/


&quality_control_nml
  enable_special_outlier_code = .false.
  input_qc_threshold          = 3.0
  outlier_threshold           = -1.0
/


! If performing vertical conversion, try
! 'distribute_mean = .false.'

! 'cutoff' initially defines the localization radius (horizontal and vertical 
! for all observations.  If you want to specify the localization 
! radius for each observation type you can list the observation types in 'special_localization_obs_types'
! 'special_localization_cutoffs' defines the localization half-radius for each 
! observation type 

&assim_tools_nml
  adaptive_localization_threshold = -1
  cutoff                          = 15000.0
  filter_kind                     = 1
  print_every_nth_obs             = 100
  rectangular_quadrature          = .true.
  sampling_error_correction       = .false.
  sort_obs_inc                    = .false.
  spread_restoration              = .false.
  gaussian_likelihood_tails       = .false.
  distribute_mean                 = .true.
  output_localization_diagnostics = .false.
  localization_diagnostics_file   = 'localization_diagnostics'
  special_localization_obs_types    = 'RADIOSONDE_U_WIND_COMPONENT','RADIOSONDE_V_WIND_COMPONENT', 'RADAR_REFLECTIVITY', 'DOPPLER_RADIAL_VELOCITY'
  special_localization_cutoffs      = 50000., 50000., 6000., 6000.
/


&cov_cutoff_nml
  select_localization = 1
/


&ensemble_manager_nml
/


&mpi_utilities_nml
/


&obs_diag_nml
  obs_sequence_name     = 'obs_seq.final'
  first_bin_center      = 2014, 8, 8, 14, 0, 0
  last_bin_center       = 2014, 8, 8, 14, 0, 0
  bin_separation        =    0, 0, 0, 0, 30, 0
  bin_width             =    0, 0, 0, 0, 30, 0
  time_to_skip          =    0, 0, 0, 0,  0, 0
  trusted_obs           = 'null'
  create_rank_histogram = .false.
  outliers_in_histogram = .true.
  hlevel_edges          = -1.0, 1000.0, 2000.0, 4000.0, 8000.0, 16000.0, 32000.0, 64000.0
  nregions              = 1
  reg_names             = 'whole'
  xlim1                 = -1.0
  xlim2                 = 1000000.0
  ylim1                 = -1.0
  ylim2                 = 1000000.0
  verbose               = .false.
/


&obs_model_nml
/


&obs_sequence_nml
  write_binary_obs_sequence = .false.
/


&obs_sequence_tool_nml
  filename_out      = 'obs_seq.combined'
  filename_seq      = 'obs1.out', 'obs2.out'
  filename_seq_list = ''
  first_obs_days    = -1
  first_obs_seconds = -1
  gregorian_cal     = .true.
  last_obs_days     = -1
  last_obs_seconds  = -1
  print_only        = .false.
/


&smoother_nml
  num_lags              = 0
  output_restart        = .true.
  restart_in_file_name  = 'ics'
  restart_out_file_name = 'restart'
  start_from_restart    = .false.
/


&state_vector_io_nml
  single_precision_output = .false.
/


&utilities_nml
  module_details = .false.
  logfilename    = 'dart_log.out'
  nmlfilename    = 'dart_log.nml'
  print_debug    = .false.
  termlevel      = 1
  write_nml      = 'file'
/


&reg_factor_nml
  input_reg_file       = 'time_mean_reg'
  reg_diagnostics_file = 'reg_diagnostics'
  save_reg_diagnostics = .false.
  select_regression    = 1
/


&schedule_nml
  bin_interval_days    = 1000000
  bin_interval_seconds = 0
  calendar             = 'Gregorian'
  first_bin_end        = 2999,  1,  1,  0,  0,  0
  first_bin_start      = 1601,  1,  1,  0,  0,  0
  last_bin_end         = 2999,  1,  1,  0,  0,  0
  max_num_bins         = 1000
  print_table          = .true.
/


&obs_seq_to_netcdf_nml
  append_to_netcdf  = .false.
  latlim1           = -10000000.0
  latlim2           = 10000000.0
  lonlim1           = -10000000.0
  lonlim2           = 10000000.0
  obs_sequence_list = ''
  obs_sequence_name = 'obs_seq.out'
  verbose           = .true.
/


&model_mod_check_nml
  input_state_files     = 'cm1out_rst_000001.nc'
  output_state_files    = 'mmc_output.nc'
  test1thru             = 0
  run_tests             = 1,2,3,4,5,7
  x_ind                 = 1000000
  quantity_of_interest  = 'QTY_U_WIND_COMPONENT'
  loc_of_interest       = 1000.0, 500.0, 120.0
  interp_test_vertcoord = 'VERTISHEIGHT'
  interp_test_dx        = 10.0
  interp_test_dy        = 10.0
  interp_test_dz        = 1.0
  interp_test_xrange    = 500.0, 1000.0
  interp_test_yrange    = 500.0, 1000.0
  interp_test_zrange    = 100.0,  101.0
  verbose               = .true.
/

! This block of code is for assimilating radar observations
! Rather than diagnosing radar reflectivity directly from model output
! I feed the DART system the 3D radar reflectivity variable output by cm1.
! If you decide to follow this same technique set microphysics_type = 5.
!
! To calculate radar radial velocity you need to set allow_dbztowt_conv=.true.
! this will allow the DART to diagnose particle fall speed via reflecvtivity 
! which is used for the radial velocity calculation

&obs_def_radar_mod_nml
   apply_ref_limit_to_obs      =   .false.,
   reflectivity_limit_obs      =     -10.0,
   lowest_reflectivity_obs     =     -10.0,
   apply_ref_limit_to_fwd_op   =   .false.,
   reflectivity_limit_fwd_op   =     -10.0,
   lowest_reflectivity_fwd_op  =     -10.0,
   max_radial_vel_obs          =   1000000,
   allow_wet_graupel           =   .false.,
   microphysics_type           =         5,
   allow_dbztowt_conv          =    .true.,
   dielectric_factor           =     0.224,
   n0_rain                     =     8.0e6,
   n0_graupel                  =     4.0e6,
   n0_snow                     =     3.0e6,
   rho_rain                    =    1000.0,
   rho_graupel                 =     400.0,
   rho_snow                    =     100.0
   /
