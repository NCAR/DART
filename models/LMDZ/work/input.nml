&filter_nml
   async                    = 2,
   adv_ens_command          = "./advance_model.csh",
   ens_size                 = 40, 
   start_from_restart       = .false.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.out",
   obs_sequence_out_name    = "obs_seq.final",
   num_output_obs_members   = 40,
   restart_in_file_name     = "filter_ic",
   restart_out_file_name    = "filter_ic_new", 
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 40,
   num_output_obs_members   = 40,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       = 3.0,
   outlier_threshold        = 3.0,
   output_forward_op_errors = .false.,
   output_inflation         = .true.,
   trace_execution          = .true.,
   output_timestamps        = .false.,
   silence                  = .false.,

   inf_flavor                  = 0,                       0,
   inf_initial_from_restart    = .false.,                 .false.,
   inf_sd_initial_from_restart = .false.,                 .false.,
   inf_output_restart          = .true.,                  .true.,
   inf_deterministic           = .true.,                  .true.,
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics',
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart',
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag',
   inf_initial                 = 1.0,                     1.0,
   inf_lower_bound             = 1.0,                     1.0,
   inf_upper_bound             = 1000000.0,               1000000.0,
   inf_damping                 = 1.0,                     1.0,
   inf_sd_initial              = 0.1,                     0.1,
   inf_sd_lower_bound          = 0.0,                     0.0,
   inf_sd_max_change           = 1.05,                    1.05,
/
! ! inf_flavor is 0:none, 1:obs space, 2: varying state space, 3: fixed state_space

&perfect_model_obs_nml
   start_from_restart       = .true.,
   output_restart           = .true.,
   async                    = 2,
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   output_timestamps        = .false.,
   trace_execution          = .true.,
   output_forward_op_errors = .false.,
   print_every_nth_obs      = -1,
   silence                  = .false.,
   output_interval          = 1,
   restart_in_file_name     = "perfect_ics",
   restart_out_file_name    = "perfect_restart",
   obs_seq_in_file_name     = "obs_seq.in",
   obs_seq_out_file_name    = "obs_seq.out",
   adv_ens_command          = "./advance_model.csh"  /


&ensemble_manager_nml
   single_restart_file_in  = .true.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2 /

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.2,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = 0,
/

&cov_cutoff_nml
   select_localization = 1  /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = 'reg_diagnostics' /

&obs_sequence_nml
   write_binary_obs_sequence = .false.  /

&lmdz_to_dart_nml
   lmdz_to_dart_input_file  = 'start.nc',
   lmdz_to_dart_output_file = 'perfect_ics',
   /

&dart_to_lmdz_nml
  dart_to_lmdz_input_file  = 'filter_restart',
  dart_to_lmdz_output_file = 'start_1.nc',
  advance_time_present     = .false.,
   /

&model_nml
   model_config_file   = 'start.nc',
   pert_names          = 'T', 'U', 'V',
   pert_sd             = 0.30,
   pert_base_vals      = -888888.0d0,
   exclude_pert_upper_levs   = 6
   highest_obs_pressure_mb   = 50.0,
   highest_state_pressure_mb = 150.0,
   max_obs_lat_degree        = 89.0,
   Time_step_seconds   = 21600,
   Time_step_days      = 0,
   print_details       = .true.,
   write_grads         = .false.,
   /

! pert_sd < 0. signals pert_base_vals to be used as the values 
!   for each ensemble member (for 1 field), instead of the value for each field.
!   DART special value -888888.0d0 can be used for that.
! pert_sd > 0 allows each point of the pert_names fields of each ens member 
!   to be randomly perturbed with a standard deviation of pert_sd.  
!   Used by filter's call to pert_model_state.
! pert_base_vals /= -888888.0d0 means that the values of the fields in pert_names
!   will be reset to the values in pert_base_vals.  

&location_nml
   horiz_dist_only             = .true.,
   vert_normalization_pressure = 100000.0, 
   vert_normalization_height   = 10000.0,
   vert_normalization_level    = 20.0,
   approximate_distance        = .true.,
   nlon                        = 71, 
   nlat                        = 36,
   output_box_info             = .false.,
   print_box_level             = 0,
  /


&preprocess_nml
   input_obs_kind_mod_file = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90',
  output_obs_kind_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90',
    input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90',
  input_files              = '../../../observations/forward_operators/obs_def_gps_mod.f90',
                             '../../../observations/forward_operators/obs_def_altimeter_mod.f90',
                             '../../../observations/forward_operators/obs_def_reanalysis_bufr_mod.f90',
                             '../../../observations/forward_operators/obs_def_AIRS_mod.f90',
                             '../../../observations/forward_operators/obs_def_insat_mod.f90'
   /

&obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                'ACARS_TEMPERATURE',
                                'AIRCRAFT_TEMPERATURE',
                                'RADIOSONDE_U_WIND_COMPONENT',
                                'RADIOSONDE_V_WIND_COMPONENT',
                                'AIRCRAFT_U_WIND_COMPONENT',
                                'AIRCRAFT_V_WIND_COMPONENT',
                                'ACARS_U_WIND_COMPONENT',
                                'ACARS_V_WIND_COMPONENT',
                                'SAT_U_WIND_COMPONENT',
                                'SAT_V_WIND_COMPONENT',
                                'GPSRO_REFRACTIVITY', 
                                'AIRS_TEMPERATURE',
                                'AIRS_SPECIFIC_HUMIDITY' 
                                'INSAT3D_TEMPERATURE',
                                'INSAT3D_SPECIFIC_HUMIDITY' 
/

!   evaluate_these_obs_types = 'RADIOSONDE_SURFACE_PRESSURE'


&utilities_nml
   TERMLEVEL = 1,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml',
   write_nml   = 'file'  /

&mpi_utilities_nml
   /

&obs_def_gps_nml
  max_gpsro_obs = 100000,
  / 

&obs_sequence_tool_nml
   filename_seq       = 'obs_seq.one', 'obs_seq.two',
   filename_out       = 'obs_seq.processed',
   first_obs_days     = -1,
   first_obs_seconds  = -1,
   last_obs_days      = -1,
   last_obs_seconds   = -1,
   min_lat            =  -90.0,
   max_lat            =   90.0,
   min_lon            =    0.0,
   max_lon            =  360.0,
   gregorian_cal      = .true.
   print_only         =  .false.,
/

# other possible obs tool namelist items:
#
# keep only the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT', 
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .true.,
#
# remove the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT', 
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .false.,
#
# keep only observations with a DART QC of 0:
#   qc_metadata        = 'Dart quality control',
#   min_qc             = 0,
#   max_qc             = 0,
#
# keep only radiosonde temp obs between 250 and 300 K:
#   copy_metadata      = 'NCEP BUFR observation',
#   copy_type          = 'RADIOSONDE_TEMPERATURE', 
#   min_copy           = 250.0,
#   max_copy           = 300.0,
#


# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, 360]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   first_bin_center =  2003, 1, 1, 6, 0, 0 ,
   last_bin_center  =  2003, 1, 2, 0, 0, 0 ,
   bin_separation   =     0, 0, 0, 6, 0, 0 ,
   bin_width        =     0, 0, 0, 6, 0, 0 ,
   time_to_skip     =     0, 0, 1, 0, 0, 0 ,
   max_num_bins     = 1000,
   rat_cri            = 3.0,
   input_qc_threshold = 3.0,
   Nregions   = 4,
   lonlim1    =   0.0,   0.0,   0.0, 235.0,
   lonlim2    = 360.0, 360.0, 360.0, 295.0,
   latlim1    =  20.0, -80.0, -20.0,  25.0,
   latlim2    =  80.0, -20.0,  20.0,  55.0,
   reg_names  = 'Northern Hemisphere', 'Southern Hemisphere', 'Tropics', 'North America',
   print_mismatched_locs = .false.,
   print_obs_locations = .false.,
   verbose = .false.  /

&schedule_nml
   calendar        = 'Gregorian',
   first_bin_start =  2007, 1, 01, 3, 0, 0 ,
   first_bin_end   =  2007, 1, 01, 9, 0, 0 ,
   last_bin_end    =  2007, 1, 15, 0, 0, 0 ,
   bin_interval_days    = 0,
   bin_interval_seconds = 21600,
   max_num_bins         = 1000,
   print_table          = .true.
   /

&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.
   /

&obs_def_gps_nml
   /

&obs_common_subset_nml
  filename_seq1       = 'obs_seq1.final', 
  filename_seq_list1  = '', 
  filename_seq2       = 'obs_seq2.final', 
  filename_seq_list2  = '',
  filename_out_suffix = '.new' ,
  print_only          = .false., 
  gregorian_cal       = .true.,
  /


# different methods to compute 'distance' from mean:
#  1 = simple absolute difference
#  2 = normalized absolute difference
#  3 = simple rmse difference
#  4 = normalized rmse difference

&closest_member_tool_nml  
   input_file_name        = 'filter_restart',
   output_file_name       = 'closest_restart',
   ens_size               = 20,
   single_restart_file_in = .true.,
   difference_method      = 4,
 /

&model_mod_check_nml
   input_state_files     = 'lmdz_input.nc'
   output_state_files    = 'mmc_output.nc'
   test1thru             = 0
   run_tests             = 1,2,3,4,5,7
   x_ind                 = 10000
   loc_of_interest       = 231.0, 40.0, 10.0
   quantity_of_interest  = 'ALL'
   interp_test_dlon      = 0.1
   interp_test_dlat      = 0.1
   interp_test_dvert     = 5.0
   interp_test_lonrange  = 205.0,  226.0
   interp_test_latrange  =  30.0,   47.0
   interp_test_vertrange =  0.0,    10.0
   interp_test_vertcoord = 'VERTISHEIGHT'
   verbose               = .false.
  /
