
&model_nml
   assimilation_period_days     = 1 
   assimilation_period_seconds  = 0 
   model_perturbation_amplitude = 0.05 
   perturb_distribution         = 'lognormal'
   max_link_distance            = 100000.0
   domain_order                 = 'channel', 'hru'
   domain_shapefiles            = 'outflow_ts.nc', 'gwres_stor.nc'
   channel_config_file          = 'parameters_dis_seg_app.nc' 
   hru_config_file              = 'parameters_dis_hru.nc' 
   hydro_config_file            = 'parameters_PRMSChannel.nc' 
   channel_variables            = 'outflow_ts', 'QTY_STREAM_FLOW', '0.0', 'NA', 'update',  
   hru_variables                = 'gwres_stor', 'QTY_GROUNDWATER', '0.0', 'NA', 'update',   
   debug                        = 0
   /   

&filter_nml
   single_file_in               = .false.,
   input_state_files            = ''
   input_state_file_list        = 'filter_chn_in.txt', 'filter_hru_in.txt'

   stages_to_write              = 'preassim', 'analysis', 'output'

   single_file_out              = .false.,
   output_state_files           = ''
   output_state_file_list       = 'filter_chn_out.txt', 'filter_hru_out.txt'
   output_interval              = 1,
   output_members               = .true.
   num_output_state_members     = 9,
   output_mean                  = .true.
   output_sd                    = .true.

   ens_size                     = 9,
   num_groups                   = 1,
   perturb_from_single_instance = .false.,
   perturbation_amplitude       = 0.2,
   distributed_state            = .true.

   async                        = 0,
   adv_ens_command              = "./advance_model.csh",

   obs_sequence_in_name         = "obs_seq_2.out",
   obs_sequence_out_name        = "obs_seq_2.final",
   num_output_obs_members       = 9,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = -1,
   first_obs_seconds            = -1,
   last_obs_days                = -1,
   last_obs_seconds             = -1,

   inf_flavor                   = 5,                       0,
   inf_initial_from_restart     = .false.,                 .false.,
   inf_sd_initial_from_restart  = .false.,                 .false.,
   inf_deterministic            = .true.,                  .true.,
   inf_initial                  = 1.0,                     1.0,
   inf_lower_bound              = 1.0,                     1.0,
   inf_upper_bound              = 1000000.0,               1000000.0,
   inf_damping                  = 0.9,                     1.0,
   inf_sd_initial               = 0.6,                     0.0,
   inf_sd_lower_bound           = 0.6,                     0.0,

   trace_execution              = .false.,
   output_timestamps            = .false.,
   output_forward_op_errors     = .false.,
   write_obs_every_cycle        = .false.,
   silence                      = .false.,
   /

&assim_tools_nml
   cutoff                          = 0.0078394481,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = 0,
   rectangular_quadrature          = .true.,
   gaussian_likelihood_tails       = .false.,
   /

&cov_cutoff_nml                    
   select_localization = 1,        
   /

&create_identity_streamflow_obs_nml
   input_files            = 'list_of_obs_files.txt'
   network_file           = 'parameters_dis_seg_app.nc'
   gages_list_file        = 'wanted_gages_list.txt'
   obs_fraction_for_error = 0.05
   assimilate_all         = .false.
   debug                  = 2 
  /

&quality_control_nml
   input_qc_threshold = 3.0,
   outlier_threshold  = 3.0,
   /

&obs_kind_nml
   assimilate_these_obs_types = 'STREAM_FLOW'
   /

&preprocess_nml
   overwrite_output        = .true.
   input_obs_def_mod_file  = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90'
   input_obs_qty_mod_file  = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
   output_obs_qty_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90'
   obs_type_files          = '../../../observations/forward_operators/obs_def_streamflow_mod.f90', 
                             '../../../observations/forward_operators/obs_def_land_mod.f90' 
   quantity_files          = '../../../assimilation_code/modules/observations/land_quantities_mod.f90', 
                             '../../../assimilation_code/modules/observations/atmosphere_quantities_mod.f90'
   /

&probit_transform_nml
   /

&algorithm_info_nml
   qceff_table_filename = ''
   /

&perfect_model_obs_nml
   read_input_state_from_file = .true.,
   single_file_in             = .true.
   input_state_files          = "perfect_input.nc"

   write_output_state_to_file = .true.,
   single_file_out            = .true.
   output_state_files         = "perfect_output.nc"
   output_interval            = 1,

   async                      = 0,
   adv_ens_command            = "./advance_model.csh",

   obs_seq_in_file_name       = "obs_seq.in",
   obs_seq_out_file_name      = "obs_seq.out",
   init_time_days             = 0,
   init_time_seconds          = 0,
   first_obs_days             = -1,
   first_obs_seconds          = -1,
   last_obs_days              = -1,
   last_obs_seconds           = -1,

   trace_execution            = .false.,
   output_timestamps          = .false.,
   print_every_nth_obs        = -1,
   output_forward_op_errors   = .false.,
   silence                    = .false.,
   /

&location_nml
  /

&ensemble_manager_nml
   /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics",
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.,
   read_binary_file_format   = 'native'
   /

&utilities_nml
   termlevel      = 1,
   module_details = .false.,
   logfilename    = 'dart_log.out',
   nmlfilename    = 'dart_log.nml',
   write_nml      = 'file',
   print_debug    = .false.,
   /

&mpi_utilities_nml
   /

&obs_sequence_tool_nml
    num_input_files   = 1 
    filename_seq      = 'obs_seq.daily'
    filename_out      = 'obs_seq.window'
    print_only        = .false.
    first_obs_days    = 154053
    first_obs_seconds = 81001
    last_obs_days     = 154053
    last_obs_seconds  = 84600
    min_lat           = -90.0
    max_lat           = 90.0
    min_lon           = 0.0 
    max_lon           = 360.0
    gregorian_cal     = .false.
/

&obs_diag_nml
    obs_sequence_name     = ''
    obs_sequence_list     = 'list_2_diag'
    first_bin_center      = 2022, 09, 15, 12, 0, 0
    last_bin_center       = 2022, 10, 14, 23, 0, 0
    bin_separation        = 0, 0, 0, 1, 0, 0
    bin_width             = 0, 0, 0, 1, 0, 0
    time_to_skip          = 0, 0, 0, 0, 0, 0
    max_num_bins          = 2000000
    trusted_obs           = 'null'
    nregions              = 1 
    lonlim1               = 0.0 
    lonlim2               = 360.0
    latlim1               = -90.0
    latlim2               = 90.0
    reg_names             = 'DRB'
    print_mismatched_locs = .false.
    create_rank_histogram = .true.
    outliers_in_histogram = .true.
    use_zero_error_obs    = .false.
    verbose               = .false.
    hlevel_edges          = -100, 10000000
/

&schedule_nml
   calendar             = 'Gregorian',
   first_bin_start      =  1601,  1,  1,  0,  0,  0,
   first_bin_end        =  2999,  1,  1,  0,  0,  0,
   last_bin_end         =  2999,  1,  1,  0,  0,  0,
   bin_interval_days    = 1000000,
   bin_interval_seconds = 0,
   max_num_bins         = 1000,
   print_table          = .true.
   /

&obs_seq_to_netcdf_nml
   obs_sequence_name = ''
   obs_sequence_list = 'list_2_diag'
   append_to_netcdf  = .true.
   lonlim1           = 0.0
   lonlim2           = 360.0
   latlim1           = -90.0
   latlim2           = 90.0
   verbose           = .false.
/

&state_vector_io_nml
   /

&integrate_model_nml
   trace_execution = .true.
   ic_file_name    = ''
   ud_file_name    = ''
   /

&model_mod_check_nml
  input_state_files     = 'seg_inflow.nc', 'gwres_stor.nc'
  output_state_files    = 'seg_output.nc', 'gwres_output.nc'
  test1thru             = 6
  run_tests             = 2
  x_ind                 = 2
  loc_of_interest       = 0.3
  quantity_of_interest  = 'QTY_STREAM_FLOW'
  interp_test_dlon      = 0.001
  interp_test_dlat      = 0.001
  interp_test_dvert     = 50.0
  interp_test_lonrange  = 283.50,  283.73
  interp_test_latrange  =  42.30,   42.51
  interp_test_vertrange = 200.0, 300.0
  interp_test_vertcoord = 'VERTISHEIGHT'
  verbose               = .true.
  /
